# -*- coding: utf-8 -*-
"""Wine-EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10yWi2SgN_0aT_sq90KpIBX-AF4i-6TXd

#Source:
(a) Forina, M. et al, PARVUS - An Extendible Package for Data
Exploration, Classification and Correlation. Institute of Pharmaceutical
and Food Analysis and Technologies, Via Brigata Salerno,
16147 Genoa, Italy.

(b) Stefan Aeberhard, email: stefan@coral.cs.jcu.edu.au

(c) July 1991

##About the Dataset

The Wine Recognition Dataset, also known as the Wine dataset, is a popular dataset in the field of machine learning and statistics. It consists of chemical analysis data of wines grown in the same region in Italy but derived from three different cultivars. This dataset is often used for classification tasks, specifically to classify wines into one of the three cultivars based on their chemical properties.

##Key Features:
Number of Instances: 178

Number of Attributes: 13 continuous attributes and 1 class attribute

##Attributes Include:



*   Alcohol
*  Malic acid

*   Ash
*   Alcalinity of ash

*   Magnesium
*   Total phenols

*   Flavanoids
*   Nonflavanoid phenols

*   Proanthocyanins
*   Color intensity

*   Hue
*   OD280/OD315 of diluted wines

*   Proline

#Importing Necessary Libraries

We are required to importing the libraries so as to performing EDA. These include NumPy, Pandas, Matplotlib, and Seaborn.
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd # Pandas is a powerful library for data manipulation and analysis.
import numpy as np # NumPy is a powerful tool for numerical computations in Python.
import seaborn as sns # Seaborn is a statistical data visualization library based on Matplotlib
import matplotlib.pyplot as plt # Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python
# %matplotlib inline

"""#Loading the Dataset"""

df= pd.read_csv("Wine.csv")

"""We will now read the data from a CSV file into a Pandas DataFrame Let us have a look at how our dataset looks like using df.head()"""

df.head()

df.columns # Displays the names of the columns

df.shape # Displays the total count of the Rows and Columns respectively.

df.describe(include='all')

"""#Rename the Columns
Creating a dictionary with the old column names as keys and the new short column names as values. Then, use the rename method to rename the columns.
"""

column_rename_dict = {
    'Alcohol': 'Alcohol',
    'Malic acid': 'Malic',
    'Ash': 'Ash',
    'Alcalinity of ash': 'AlkAsh',
    'Magnesium': 'Mg',
    'Total phenols': 'Phenols',
    'Flavanoids': 'Flav',
    'Nonflavanoid phenols': 'NonFlav',
    'Proanthocyanins': 'Proan',
    'Color intensity': 'Color',
    'Hue': 'Hue',
    'OD280/OD315 of diluted wines': 'OD280/OD315',
    'Proline': 'Proline'
}

# Rename the columns as some column names are too long
df.rename(columns=column_rename_dict, inplace=True)

df.columns # hecking the DataFrame to ensure the columns have been renamed correctly.

df.head()

"""#Plotting histograms to understand the distribution of numerical features."""

import matplotlib.pyplot as plt

# Plot histograms for all numerical features
df.hist(figsize=(12, 12))
plt.show()

"""#Checking if there is any Null value in the Data

We will now check for missing values in our dataset. In case there are any missing entries, we will impute them with appropriate values (mode in case of categorical feature, and median or mean in case of numerical feature). We will use the isnull() function for this purpose.
"""

df.isnull().sum() # Displays the total count of the null valuesin the particular columns.

"""There is no null or missing value in the dataset."""

df.info() # Displays the total count of values present in the particular column along with the null count and data type.

"""##Checking for the Duplicate values"""

# Check for duplicate rows
duplicate_rows = df[df.duplicated()]

if duplicate_rows.empty:
    print("No duplicate values found.")
else:
    print("Duplicate values found:")
    print(duplicate_rows)

df.corr() # computes the correlation matrix for the variables in the DataFrame df.

"""#Graphical representation

A histplot in Seaborn (or a histogram plot in general) is used to visualize the distribution of a dataset. It shows the frequency (or count) of data points that fall within specified bins or intervals.
"""

# Define custom colors
custom_colors = ["#FF5733", "#3366FF", "#33FF57"]  # Example colors, you can adjust as needed

# Plot the histogram with custom colors
sns.histplot(df['Class'], kde=True, color="#FF5733", palette=custom_colors)

"""##Number of Instances
Class 1 = 59

Class 2 = 71

Class 3 = 48
"""

sns.histplot(df['Alcohol'], kde=True, color="#3366FF", palette=custom_colors)

"""###The Alcohol attribute in the Wine Recognition Dataset measures the percentage of alcohol by volume (ABV) in each wine sample

###Typical Alcohol Content: Wines typically have an alcohol content ranging from around 9% to 16% ABV, with most table wines falling between 11% and 15%. The values 11.0 to 15.0 in the dataset indicate the percentage of alcohol in the wine.
"""

sns.histplot(df['Malic'], kde=True, color="#33FF57", palette=custom_colors)

"""The Malic acid attribute in the Wine Recognition Dataset measures the amount of malic acid present in the wine, typically reported in grams per liter. Malic acid is one of the primary acids found in wine, contributing to its tart taste.

Hereâ€™s how to interpret the malic acid content ranging from 0.74 to 5.80 grams per liter:

0.74 - 1.50 g/L:   Low Malic Acid

Wines in this range have a lower malic acid content. These wines are typically less tart and have a smoother, softer taste.

1.50 - 3.00 g/L:   Moderate Malic Acid

Wines with moderate malic acid content strike a balance between tartness and smoothness.

3.00 - 4.50 g/L:   High Malic Acid

Wines in this range have a more pronounced tartness. This higher acidity is often found in certain white wines, such as Riesling or Sauvignon Blanc, and can contribute to a crisp and vibrant taste profile.

4.50 - 5.80 g/L:   Very High Malic Acid

Wines with very high malic acid content are very tart and might feel sharp on the palate.


"""

sns.histplot(df['Ash'], kde=True, color="#FF5733", palette=custom_colors)

"""The Ash attribute in the Wine Recognition Dataset represents the total ash content of the wine, measured in grams per liter. Ash is a measure of the mineral content left after the wine is evaporated and burned. It provides an indication of the wine's mineral and inorganic substance content, which can affect flavor and quality.

Here's how to check the ash content ranging from 1.36 to 3.23 grams per liter:

1.36 - 1.80 g/L:  Low Ash Content

 Wines with ash content in this range have lower mineral content.

 1.80 - 2.50 g/L:  Moderate Ash Content

  This range represents a balanced mineral content in wines.

  2.50 - 3.23 g/L: High Ash Content
  
   Wines with ash content in this range have a higher mineral content.
"""

sns.histplot(df['AlkAsh'], kde=True, color="#3366FF", palette=custom_colors)

"""The Alkalinity of ash (AlkAsh) attribute in the Wine Recognition Dataset measures the alkalinity of the ash in wine, typically reported in milliequivalents per liter (meq/L). This attribute reflects the buffering capacity and mineral content of the wine. Here's how to interpret the alkalinity of ash content ranging from 10.60 to 30.00 meq/L:

10.60 - 15.00 meq/L:  Low Alkalinity of Ash

 Wines with alkalinity in this range have lower buffering capacity and mineral content.

 15.00 - 20.00 meq/L: Moderate Alkalinity of Ash

  This range represents a balanced level of alkalinity.

  20.00 - 25.00 meq/L: High Alkalinity of Ash
  
   Wines in this range have a higher buffering capacity and mineral content.

25.00 - 30.00 meq/L: Very High Alkalinity of Ash

 Wines with very high alkalinity may have a pronounced buffering capacity and mineral richness.

"""

sns.histplot(df['Mg'], kde=True, color="#33FF57", palette=custom_colors)

"""The Magnesium (Mg) attribute in the Wine Recognition Dataset measures the magnesium content in the wine, typically reported in milligrams per liter (mg/L). Magnesium is an essential mineral that can influence the fermentation process and overall quality of the wine. Here's how to interpret the magnesium content ranging from 70.00 to 162.00 mg/L:

70.00 - 100.00 mg/L: Low Magnesium Content

 Wines with magnesium content in this range have lower levels of this essential mineral.

 100.00 - 130.00 mg/L: Moderate Magnesium Content

  This range represents a balanced level of magnesium.

  130.00 - 162.00 mg/L: High Magnesium Content
  
   Wines in this range have a higher magnesium content.
"""

sns.histplot(df['Phenols'], kde=True, color="#FF5733", palette=custom_colors)

"""The Total phenols attribute in the Wine Recognition Dataset measures the total phenolic content in the wine, typically reported in grams per liter (g/L). Phenols are important compounds that affect the taste, color, and mouthfeel of wine. Here's how to interpret the total phenols content ranging from 0.98 to 3.88 g/L:

0.98 - 1.50 g/L: Low Phenolic Content

 Wines with total phenols in this range have lower levels of phenolic compounds.

 1.50 - 2.50 g/L: Moderate Phenolic Content

  This range represents a balanced level of phenolic compounds.

2.50 - 3.88 g/L: High Phenolic Content

 Wines in this range have a higher phenolic content. These wines can exhibit richer color, greater astringency, and a more robust flavor profile.

"""

sns.histplot(df['Flav'], kde=True, color="#3366FF", palette=custom_colors)

"""
The Flavanoids attribute in the Wine Recognition Dataset measures the total flavonoid content in the wine, typically reported in milligrams per liter (mg/L). Flavonoids are a group of polyphenolic compounds found in plants, including grapes, and contribute to the color, flavor, and antioxidant properties of wine. Here's how to interpret the total flavonoids content ranging from 0.34 to 5.08 mg/L:


0.34 - 1.00 mg/L Low Flavonoid Content

 Wines with total flavonoids in this range have lower levels of flavonoid compounds.

 1.00 - 3.00 mg/L: Moderate Flavonoid Content

  This range represents a balanced level of flavonoid compounds.

  3.00 - 5.08 mg/L: High Flavonoid Content
  
   Wines in this range have a higher flavonoid content."""

sns.histplot(df['NonFlav'], kde=True, color="#33FF57", palette=custom_colors)

"""The Nonflavanoid phenols (NonFlav) attribute in the Wine Recognition Dataset measures the content of non-flavanoid phenolic compounds in the wine, typically reported in milligrams per liter (mg/L). Non-flavanoid phenols contribute to the wine's color stability, taste, and antioxidant properties. Here's how to interpret the non-flavanoid phenols content ranging from 0.13 to 0.66 mg/L:

0.13 - 0.30 mg/L:  Low Non-flavanoid Phenols Content

 Wines in this range have lower levels of non-flavanoid phenols.

 0.30 - 0.50 mg/L:  Moderate Non-flavanoid Phenols Content

  This range indicates a balanced level of non-flavanoid phenols

  0.50 - 0.66 mg/L: High Non-flavanoid Phenols Content
  
   Wines in this range have higher levels of non-flavanoid phenols.
"""

sns.histplot(df['Proan'], kde=True, color="#FF5733", palette=custom_colors)

"""The Proanthocyanins attribute in the Wine Recognition Dataset measures the total proanthocyanin content in the wine, typically reported in milligrams per gram (mg/g). Proanthocyanins are a group of polyphenolic compounds found in grape skins, seeds, and stems, contributing to color stability, mouthfeel, and antioxidant properties of wine. Here's how to interpret the total proanthocyanins content ranging from 0.41 to 3.58 mg/g:

0.41 - 1.00 mg/g: Low Proanthocyanins Content

 Wines with total proanthocyanins in this range have lower levels of proanthocyanin compounds.

 1.00 - 2.50 mg/g:  Moderate Proanthocyanins Content

  This range represents a balanced level of proanthocyanin compounds.

  2.50 - 3.58 mg/g: High Proanthocyanins Content
  
   Wines in this range have a higher proanthocyanin content.
"""

sns.histplot(df['Color'], kde=True, color="#3366FF", palette=custom_colors)

"""The Color intensity attribute in the Wine Recognition Dataset measures the intensity of color in the wine, typically reported in absorbance units at 420 nm. This attribute reflects the depth and richness of color, which can be influenced by factors such as grape variety, skin contact during fermentation, and aging process. Here's how to interpret the color intensity ranging from 1.28 to 13.00 absorbance units:

1.28 - 3.00 absorbance units: Low Color Intensity

 Wines with color intensity in this range have a lighter color.

 3.00 - 7.00 absorbance units: Moderate Color Intensity

  This range represents a balanced level of color intensity

  7.00 - 13.00 absorbance units: High Color Intensity
  
   Wines in this range have a higher color intensity.
"""

sns.histplot(df['Hue'], kde=True, color="#33FF57", palette=custom_colors)

"""The Hue attribute in the Wine Recognition Dataset measures the hue or color shade of the wine, typically expressed as the absorbance ratio of OD280/OD315. The hue can provide insights into the color spectrum and tonal characteristics of the wine. Here's how to interpret the hue ranging from 0.48 to 1.71:

0.48 - 0.80: Low Hue

 Wines with a low hue value tend to exhibit more red or purple tones.

 0.80 - 1.20: Moderate Hue

  This range represents a balanced hue value, indicating a mix of red and blue tones.

  1.20 - 1.71: High Hue
  
   Wines with a high hue value tend to exhibit more orange or yellow tones.
"""

sns.histplot(df['OD280/OD315'], kde=True, color="#FF5733", palette=custom_colors)

"""The attribute "OD280/OD315" in the Wine Recognition Dataset typically represents the ratio of absorbance measurements at 280 nm to 315 nm. This ratio can provide insights into various chemical components present in the wine, including proteins, phenolics, and color-related compounds. Here's how to interpret the OD280/OD315 ratio ranging from 1.27 to 4.00:


1.27 - 2.00 :  Low Ratio

 A lower OD280/OD315 ratio typically indicates a higher concentration of phenolic compounds or protein content in the wine.

 2.00 - 3.00: Moderate Ratio

  A moderate OD280/OD315 ratio suggests a balanced level of phenolic compounds and protein content in the wine

  3.00 - 4.00: High Ratio
  
   A higher OD280/OD315 ratio typically indicates a lower concentration of phenolic compounds or protein content in the wine.
"""

sns.histplot(df['Proline'], kde=True, color="#3366FF", palette=custom_colors)

"""The Proline attribute in the Wine Recognition Dataset measures the concentration of proline in the wine, typically reported in milligrams per liter (mg/L). Proline is a non-essential amino acid found in grapes and can be influenced by factors such as grape variety, vineyard conditions, and winemaking techniques. Here's how to interpret the proline concentration ranging from 278 to 1680 mg/L:

278 - 600 mg/L: ow Proline Concentration

 Wines with proline concentrations in this range have lower levels of this amino acid.

 600 - 1000 mg/L: Moderate Proline Concentration

  This range represents a balanced level of proline concentration.

  1000 - 1680 mg/L: High Proline Concentration
  
   Wines in this range have a higher proline concentration.
"""

# Compute the correlation matrix
corr_matrix = df.corr()

# Plot the heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(corr_matrix, annot=True, fmt='.2f', cmap='coolwarm')
plt.show()

"""In the heatmap, the colors represent the strength and direction of the correlation coefficients between pairs of variables in the correlation matrix.


Correlation Coefficients:


The correlation coefficient ranges from -1 to 1.


1 indicates a perfect positive correlation.


-1 indicates a perfect negative correlation.


0 indicates no correlation.


Dark Red: Strong positive correlation (close to 1)


Dark Blue: Strong negative correlation (close to -1)


Light Colors (light red/light blue): Weak or no correlation (close to 0)
"""

# Plot box plots for all numerical features
plt.figure(figsize=(15, 10))
df.plot(kind='box', subplots=True, layout=(4, 4), sharex=False, sharey=False, figsize=(15, 15))
plt.show()

"""Here as we go thorugh the boxplot visuals,

There are some outlier in

Malic

Ash

AlkAsh

MG

Proan

color

Hue

"""

# Pair plot with hue based on target variable
sns.pairplot(df, hue='Class', diag_kind='kde')
plt.show()

"""Here is the pair plot in accordance with the Class 1, 2 and 3 with all the attributes of the dataset."""

